<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Testerjunit"><sessioninfo id="TE403-7f0591fa" start="1631107014475" dump="1631107014842"/><sessioninfo id="TE403-9682c435" start="1631107050891" dump="1631107051233"/><sessioninfo id="TE403-7b95aabe" start="1631107650842" dump="1631107651199"/><sessioninfo id="TE403-f7e3debb" start="1631107682068" dump="1631107682413"/><sessioninfo id="TE403-cce580b" start="1631108027243" dump="1631108027583"/><sessioninfo id="TE403-2205b927" start="1631108339734" dump="1631108340121"/><sessioninfo id="TE403-1f8eea2" start="1631108549480" dump="1631108549831"/><sessioninfo id="TE403-c7ff2ef9" start="1631108658593" dump="1631108658942"/><sessioninfo id="TE403-8262e636" start="1631108736952" dump="1631108737308"/><sessioninfo id="TE403-86e1f3f4" start="1631108818398" dump="1631108818746"/><sessioninfo id="TE403-af84dc7" start="1631108830273" dump="1631108830642"/><sessioninfo id="TE403-8141d74c" start="1631108842105" dump="1631108842446"/><sessioninfo id="TE403-cf6cd255" start="1631108854239" dump="1631108854600"/><sessioninfo id="TE403-33d0c076" start="1631108896860" dump="1631108897210"/><sessioninfo id="TE403-54430eab" start="1631109036723" dump="1631109037125"/><sessioninfo id="TE403-1b73d795" start="1631109413657" dump="1631109414022"/><sessioninfo id="TE403-538dffc0" start="1631109434914" dump="1631109435274"/><sessioninfo id="TE403-272d39b2" start="1631109450687" dump="1631109451064"/><package name="nu/te4/testerjunit"><class name="nu/te4/testerjunit/TestarJUnit" sourcefilename="TestarJUnit.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="nu/te4/testerjunit/MyMath" sourcefilename="MyMath.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="17"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqual" desc="(II)Z" line="26"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="difference" desc="(II)I" line="30"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="difference" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="41"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="55"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nu/te4/testerjunit/Checker" sourcefilename="Checker.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPalindrome" desc="(Ljava/lang/String;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="(Ljava/lang/String;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimeNumber" desc="(I)Z" line="36"><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nu/te4/testerjunit/MyMath2" sourcefilename="MyMath2.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToFarenheit" desc="(D)D" line="16"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(II)I" line="24"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MyMath2.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="1" cb="1"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TestarJUnit.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Checker.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="2"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="2"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="2"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="9" ci="2" mb="2" cb="0"/><line nr="40" mi="4" ci="0" mb="2" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MyMath.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="1" ci="6" mb="1" cb="1"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="1" cb="1"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="55"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="37" covered="137"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="10" covered="39"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="1" covered="3"/></package><counter type="INSTRUCTION" missed="37" covered="137"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="10" covered="39"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="1" covered="3"/></report>